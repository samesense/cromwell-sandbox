include required(classpath("application"))

backend {
  default = SGE

  providers {
    SGE {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      config {
        concurrent-job-limit = 100
        run-in-background = true

        runtime-attributes = """
        String ? task_docker_image
        Int cpu = 1
        Int ? memory_gb 
        String sge_queue = "all.q"
        
        """

        # String sub_strip_path = "/mnt/isilon/.*/cromwell-executions/"
        # String cwd_inside_docker = sub(${cwd}, sub_string_path)

        submit = """
        export TMPDIR=/home/evansj/me/tmp/
        module load singularity
        mkdir -p ${cwd}/image
        singularity build  ${cwd}/image/theImage.simg docker://${task_docker_image}

        export JUNK=`echo ${cwd} | sed 's/\/mnt\/isilon\/.*\/cromwell-executions\//\/cromwell-executions\//g'`
        # need to construct docker cwd
        #sub('cromwell-executions
        echo "singularity exec --bind ${cwd}:"$JUNK" ${cwd}/image/theImage.simg ${job_shell} ${script}" | qsub \
        -terse \
        -V \
        -b n \
        -N ${job_name} \
        -wd ${cwd} \
        -pe smp ${cpu} \
        ${"-l h_vmem=" + memory_gb + "g"} \
        ${"-l m_mem_free=" + memory_gb + "g"} \
        ${"-q " + sge_queue} 
        """

        job-id-regex = "(\\d+)"

        kill = "qdel ${job_id}"

        check-alive = "qstat -j ${job_id}"
      }
    }
  }
}